/**
 * 
 */
package com.credit.controller.personal;

import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.credit.model.member.Customer;
import com.credit.model.person.PerProcess;
import com.credit.modelvo.Permission;
import com.credit.modelvo.SessionName;
import com.credit.service.person.PerProcessService;

/**
 * 个人信用
 * @author Administrator
 */
@Controller
@RequestMapping("/initPersonal")
public class PersonalController {
	
	private static final Logger logger = Logger.getLogger(PersonalController.class);

	private String moduleName = "用户操作情况";
	
	@Resource
	private PerProcessService perProcessService;
	
	/**
	 * @Title 阅读协议
	 * @author  Administrator  @date 2017-9-15 
	 * @Description 
	 *
	 */
	@Permission(model = "personal", privilegeValue = "readProtocols")
	@RequestMapping("/readProtocols")
	@ResponseBody
	public Map<String, Object> readProtocols(HttpServletRequest request){
		logger.info(moduleName + "[阅读协议]");
		Map<String, Object> msgMap = new HashMap<String, Object>();
		Customer customer = (Customer) request.getSession().getAttribute(SessionName.CUSTOMER);
		if(customer != null){
			PerProcess process = perProcessService.selectByPerIDKey(customer.getPerid());
		    if(process!=null){
		    	process.setReadstate(1);
		    	perProcessService.updateByPrimaryKeySelective(process);
		    }else{
		    	process = new PerProcess();
		    	process.setReadstate(1);
		    	process.setUuid(UUID.randomUUID().toString().replace("-", ""));
		    	process.setPerid(customer.getPerid());
		    	perProcessService.insertSelective(process);
		    }
		    msgMap.put("msg", "阅读协议状态更新成功");
		}else{
			msgMap.put("msg", "网络错误，请重新登录    错误代码：204");
		}
		return msgMap;
	}
	/**
	 * @Title  机构下已评价公司分数的数量
	 * @author  Administrator  @date 2017-9-22 
	 * @Description 
	 *
	 */
	@Permission(model = "organization", privilegeValue = "main")
	@SuppressWarnings("unused")
	@RequestMapping("/getCountScore")
	@ResponseBody
	public Map<String, Object> getCountScore(Model model,HttpServletRequest request) {
		logger.info(moduleName + "[获取 机构下已评价公司分数的折线图]");
		Map<String, Object> msgMap = new HashMap<String, Object>();
		Customer customer = (Customer) request.getSession().getAttribute(SessionName.CUSTOMER);
		System.out.println("huoqu cus ： "+customer.getOrgid());
		if (customer != null) {
			msgMap.put("ChartVos", "");
			msgMap.put("status", true);
		}else{
			msgMap.put("status", false);
		}
		return msgMap;
	}
	
}
