/**
 * 
 */
package com.credit.controller.government;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;
import org.dom4j.Document;
import org.dom4j.DocumentException;
import org.dom4j.io.SAXReader;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.credit.model.enterprise.EntBaseInfo;
import com.credit.model.enterprise.EntResult;
import com.credit.model.enterprise.Executives;
import com.credit.model.enterprise.Shareholder;
import com.credit.model.member.Customer;
import com.credit.modelvo.Permission;
import com.credit.modelvo.SessionName;
import com.credit.modelvo.organization.ScoringEnterpriseList;
import com.credit.modelvo.organization.StatisticalListVO;
import com.credit.modelvo.pagelist.PageView;
import com.credit.modelvo.pagelist.QueryResult;
import com.credit.service.addition.ModelService;
import com.credit.service.enterprise.EntBaseInfoService;
import com.credit.service.enterprise.EntResultService;
import com.credit.service.enterprise.ExecutivesService;
import com.credit.service.enterprise.ShareholderService;
import com.credit.service.member.OrganizationService;
import com.credit.util.model.Index;
import com.credit.util.model.IndexVO;
import com.credit.util.model.ModelUtil;
import com.credit.util.model.Option;
import com.credit.util.properties.BusinessUtil;
import com.credit.util.properties.InterfaceDataUtil;
import com.nbchina.ws.api.entinfo.baseinfo.BaseInterface;
import com.nbchina.ws.api.entinfo.riskinfo.CommonGridListEntityVo;
import com.nbchina.ws.api.entinfo.riskinfo.RiskInterface;


/**
 * 进入 政府 信息
 * @Title: OrganizationController.java
 * @author Administrator @date 2017-9-21 下午6:49:09
 * @Description: TODO
 */
@Controller
@RequestMapping("/initGovernment")
public class GovernmentController {
	
	private static final Logger logger = Logger.getLogger(GovernmentController.class);

	private String moduleName = "用户操作情况";
	
	private static Integer PAGESIZE = 15;
	
	@Resource
	OrganizationService organizationService;
	
	@Resource
	private RiskInterface riskinfo;
	
	@Resource
	private BaseInterface baseInterface;
	/*企业基础信息*/
	@Resource
	private EntBaseInfoService entBaseInfoService;
	/*股东信息*/
	@Resource
	private ShareholderService shareholderService;
	/*高管信息*/
	@Resource
	private ExecutivesService executivesService ;
	/*评分结果*/
	@Resource
	private EntResultService entResultService ;
	/*模型*/
	@Resource
	private ModelService modelService ;
	
	/**
	 * @Title 折线图--统计所有已评价公司分数的数量
	 * @author  Administrator  @date 2017-9-22 
	 * @Description 
	 *
	 */
	@Permission(model = "government", privilegeValue = "main")
	@RequestMapping("/getCountScore")
	@ResponseBody
	public Map<String, Object> getCountScore(HttpServletRequest request) {
		Map<String, Object> msgMap = new HashMap<String, Object>();
		Customer customer = (Customer) request.getSession().getAttribute(SessionName.CUSTOMER);
		if (customer != null) {
			logger.info(moduleName + "[获取 所有已评价公司分数的 折线图]");
			msgMap.put("ChartVos", organizationService.selectAllScores());
			msgMap.put("status", true);
		}else{
			msgMap.put("status", false);
		}
		return msgMap;
	}
	/**
	 * @Title 饼图--统计所有已评价公司分数的数量  按行业进行分类
	 * @author  Administrator  @date 2017-9-22 
	 * @Description 
	 * @param applyreportstate
	 * @param scorestate
	 */
	@Permission(model = "government", privilegeValue = "main")
	@RequestMapping("/classifyByIndustry")
	@ResponseBody
	public Map<String, Object> classifyByIndustry(HttpServletRequest request) {
		Map<String, Object> msgMap = new HashMap<String, Object>();
		Customer customer = (Customer) request.getSession().getAttribute(SessionName.CUSTOMER);
		if (customer != null) {
			logger.info(moduleName + "[获取 所有已评价公司分数的 折线图]");
			//参数可变
			msgMap.put("ChartVos", organizationService.selectIndustryNum(1,5));
			msgMap.put("status", true);
		}else{
			msgMap.put("status", false);
		}
		return msgMap;
	}
	
	/**
	 * @Title 获取 统计所有公司评分状态的数量
	 * @author  Administrator  @date 2017-9-22 
	 * @Description 
	 *
	 */
	@Permission(model = "government", privilegeValue = "main")
	@RequestMapping("/summaryscoring")
	@ResponseBody
	public Map<String, Object> summaryscoring(HttpServletRequest request) {
		Map<String, Object> msgMap = new HashMap<String, Object>();
		Customer customer = (Customer) request.getSession().getAttribute(SessionName.CUSTOMER);
		if (customer != null) {
			logger.info(moduleName + "[初始化所有公司分数的分类信息]");
			List<StatisticalListVO> statisticalListVOs= organizationService.searchByAllStatisticalList();
			for (StatisticalListVO statisticalListVO : statisticalListVOs) {
				if("0".equals(statisticalListVO.getApplyreportstate())){
					msgMap.put("notApplied",statisticalListVO.getC_scorestate());
				}else{
					if("0".equals(statisticalListVO.getScorestate())){
						msgMap.put("confirmation",statisticalListVO.getC_scorestate());
					}else if("1".equals(statisticalListVO.getScorestate())){
						msgMap.put("editorialSurvey",statisticalListVO.getC_scorestate());
					}else if("2".equals(statisticalListVO.getScorestate())){
						msgMap.put("endInvestigation",statisticalListVO.getC_scorestate());
					}else if("3".equals(statisticalListVO.getScorestate())){
						msgMap.put("preliminaryConfirmation",statisticalListVO.getC_scorestate());
					}else if("4".equals(statisticalListVO.getScorestate())){
						msgMap.put("score",statisticalListVO.getC_scorestate());
					}else if("5".equals(statisticalListVO.getScorestate())){
						msgMap.put("endScore",statisticalListVO.getC_scorestate());
					}
				}
			}
			msgMap.put("status", true);
		}else{
			msgMap.put("status", false);
		}
		return msgMap;
	}
	/**
	 * @Title 红黑榜
	 * @author  Administrator  @date 2017-10-10 
	 * @Description 
	 *
	 */
	@Permission(model = "government", privilegeValue = "main")
	@RequestMapping("/getRedBlackList")
	@ResponseBody
	public Map<String, Object> getRedBlackList(HttpServletRequest request) {
		Map<String, Object> msgMap = new HashMap<String, Object>();
		Customer customer = (Customer) request.getSession().getAttribute(SessionName.CUSTOMER);
		if (customer != null) {
			logger.info(moduleName + "[获取红黑榜 ]");
			BufferedReader bufferedReader = null;
			String path =  request.getSession().getServletContext().getRealPath("") +"/Resources/operation/";
			System.out.println(path);
			File file1 = new File(path+"redList.json");
			File file2 = new File(path+"blackList.json");
			String redList = "";
			String blackList = "";
			try {
				bufferedReader =new BufferedReader(new InputStreamReader(new FileInputStream(file1),"utf-8"));
				String line = "";// 用来保存每次读取一行的内容  
		        while ((line = bufferedReader.readLine()) != null) {  
		        	System.out.println(line);
		            redList += line;
		        }  
				System.out.println(redList);
			} catch (FileNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}finally{
				if(bufferedReader != null){
					try {
						bufferedReader.close();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
			}
			try {
				bufferedReader =new BufferedReader(new InputStreamReader(new FileInputStream(file2),"utf-8"));
				String line = "";// 用来保存每次读取一行的内容  
		        while ((line = bufferedReader.readLine()) != null) {  
		            blackList += line;
		        }  
		        System.out.println(blackList);
			} catch (FileNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}finally{
				if(bufferedReader != null){
					try {
						bufferedReader.close();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
			}
			
			if(redList != null && ! "".equals(redList.trim())){
				//JSONArray  jsonArray =JSONArray.fromObject(redList);
				//List<RedBlackList> redLists =(List<RedBlackList>) JSONArray.toCollection(jsonArray, RedBlackList.class);
				msgMap.put("redLists", redList);
			}else{
				msgMap.put("status", false);
			}
			
			if(blackList != null && ! "".equals(blackList.trim())){
				
				msgMap.put("blackLists", blackList);
			}else{
				msgMap.put("status", false);
			}
			msgMap.put("status", true);
		}else{
			msgMap.put("status", "-1");
		}
		return msgMap;
	}
	/**
	 * @Title 双公示
	 * @author  Administrator  @date 2017-10-10 
	 * @Description 
	 *
	 */
	@Permission(model = "government", privilegeValue = "main")
	@RequestMapping("/getDoublePublicity")
	@ResponseBody
	public Map<String, Object> getDoublePublicity(HttpServletRequest request) {
		Map<String, Object> msgMap = new HashMap<String, Object>();
		Customer customer = (Customer) request.getSession().getAttribute(SessionName.CUSTOMER);
		if (customer != null) {
			logger.info(moduleName + "[初始化双公示企业 ]");
			String penalty = InterfaceDataUtil.getMsg("doublePublicity_Penalty");
			String license = InterfaceDataUtil.getMsg("doublePublicity_License");
			try{
				//行政许可
				com.nbchina.ws.api.entinfo.riskinfo.QueryResult queryResult1 = riskinfo.selectLicenseByAreacode(1,30,license);//license
				msgMap.put("license", queryResult1.getResultlist());
				//行政处罚
				com.nbchina.ws.api.entinfo.riskinfo.QueryResult queryResult2 = riskinfo.selectPenaltyByAreacode(1, 30, penalty);//penalty
				msgMap.put("penalty", queryResult2.getResultlist());
				msgMap.put("status", true);
			}catch (Exception e) {
				logger.error(moduleName+ "DataService_selectPenaltyByAreacode 获取双公示信息失败") ;
				msgMap.put("status", false);
			}
		}else{
			msgMap.put("status", "-1");
		}
		return msgMap;
	}
	
	/**
	 * @Title 评分企业名单
	 * @author  Administrator  @date 2017-9-22 
	 * @Description 
	 *
	 */
	@Permission(model = "government", privilegeValue = "scoreList")
	@RequestMapping("/scoringEnterpriseList")
	public String lineChart(HttpServletRequest request,Integer pageNum, Integer pageSize,String searchTitle) {
		Customer customer = (Customer) request.getSession().getAttribute(SessionName.CUSTOMER);
		if (customer != null) {
			logger.info(moduleName + "[初始化所有公司分数的分类信息]");
			if (pageNum==null) pageNum = 1;//页面第几页的参数，默认为第一页
			if (pageSize==null) pageSize = 18;//每个页面显示几条记录仅仅这儿定义即可
			 Map<String, Object> params = new HashMap<String, Object>();
			 if(searchTitle!=null && ! "".equals(searchTitle.trim())){
					params.put("name",searchTitle.trim());
				}
			PageView<ScoringEnterpriseList> pageView =new PageView<ScoringEnterpriseList>(pageSize, pageNum);
			//param 仅支持 ent.name
			QueryResult<ScoringEnterpriseList> qr = organizationService.searchByAll(pageNum, pageSize,params);
			pageView.setQueryResult(qr);
			request.setAttribute("pageView", pageView);//查询出的数据放入pageView中，供页面展示
			/*相关代码此处补充*/
			return "menu/gov/scoringEnterpriseList";
		}else{
			return "redirect:/customer/logonUI.do";
		}
	}
	
	/**
	 * @Title 评分企业名单
	 * @author  Administrator  @date 2017-9-22 
	 * @Description 
	 *
	 */
	@Permission(model = "government", privilegeValue = "scoreList")
	@RequestMapping("/scoringEnterpriseListView")
	public String scoringEnterpriseListView(HttpServletRequest request,String entid) {
				Customer customer = (Customer) request.getSession().getAttribute(SessionName.CUSTOMER);
				if (customer != null) {
					logger.info(moduleName + "[查看公司详细信息]");
					if(entid !=null && !"".equals(entid.trim())){
						EntBaseInfo entBaseInfo= entBaseInfoService.selectByPrimaryKey(entid);
						request.setAttribute("entBaseInfo",entBaseInfo);
						List<Shareholder> shareholders = shareholderService.selectByEntBaseInfo(entid);
						request.setAttribute("shareholders", shareholders);
						List<Executives> executives = executivesService.selectByEntBaseInfo(entid);
						request.setAttribute("executives", executives);
						EntResult entResult= entResultService.selectByEntId(entid);
						request.setAttribute("entResult", entResult);
						
						//模型
						boolean flag=true;
						String adr=BusinessUtil.getMsg("adr");
						String root=BusinessUtil.getMsg("root");
						List<Index> indexs = new ArrayList<Index>();
						adr=adr+root;
						String path=new String();
						if(entResult==null){
							flag=false;
							request.setAttribute("msg","该企业未进入评分流程");
						}else{
							if(entResult.getScorexmlurl()!=null){
								path=adr+entResult.getScorexmlurl();
								File file=new File(path);
								if(!file.exists()){
									flag=false;
									request.setAttribute("msg","XML文件不存在");
								}
							}else{flag=false;}
						}
						if(flag){
							try {
								File file=new File(path);
								Document document = new SAXReader().read(file);
								indexs=ModelUtil.getIndex(document);
							} catch (DocumentException e) {
								e.printStackTrace();
							}
							List<IndexVO> indexvos=new ArrayList<IndexVO>();
							if(indexs != null){
								for(Index index1 : indexs){
									for(Index index2 : index1.getChirds()){
										for(Index index3 : index2.getChirds()){
											IndexVO indexvo=new IndexVO();
											indexvo.setUuid(index3.getUuid());
											indexvo.setIndexName(index3.getName());
											if(index3.getWeight()!=null){
												indexvo.setWeight(index3.getWeight());
												for(Option option : index3.getOptions()){
													if(option.getSelected()!=null&&option.getSelected().equals("true")){
														indexvo.setOptionName(option.getName());
														indexvo.setOptionScore(Double.parseDouble(option.getValue()));
														double indexscore=Double.parseDouble(option.getValue())*Double.parseDouble(index3.getWeight());
														indexvo.setIndexScore(indexscore);
													}
												}
												indexvos.add(indexvo);
											}
										}
									}

								}	
							}
							request.setAttribute("indexs", indexvos);
						}
						return "menu/gov/scoringEnterpriseListView";
					}else{
						request.setAttribute("status", 1);
						return "menu/gov/scoringEnterpriseList";
					}
					
				}else{
					return "redirect:/customer/logonUI.do";
				}
	}
	
	/**
	 * @Title 苏州各市行政处罚的数量
	 * @author  Administrator  @date 2017-10-11 
	 * @Description 
	 *
	 */
	@Permission(model = "government", privilegeValue = "main")
	@RequestMapping("/getEnterprisesPenaltyNumber")
	@ResponseBody
	public Map<String, Object> getEnterprisesPenaltyNumber(HttpServletRequest request) {
		Customer customer = (Customer) request.getSession().getAttribute(SessionName.CUSTOMER);
		Map<String, Object> msgMap = new HashMap<String, Object>();
		if(baseInterface == null){
			System.out.println("接口未能调用");
			return null;
		}
		if (customer != null) {
			logger.info(moduleName + "[初始化苏州各市行政处罚的数量 ]");
			//江苏省：32____(4个下划线)  苏州大市：3205__(2个下划线)   吴中区：320506
			String region = InterfaceDataUtil.getMsg("region");
			List<CommonGridListEntityVo>  commonGridListEntityVos = null;
			try{
				commonGridListEntityVos = riskinfo.selectPenaltyNumberByAreacode(region);
			}catch (Exception e) {
				logger.error(moduleName + "DataService selectPenaltyNumberByAreacode 获取苏州各市行政处罚的数量 失败");
			}
			msgMap.put("value",commonGridListEntityVos);
			msgMap.put("status", true);
		}else{
			msgMap.put("status", "-1");
		}
		return msgMap;
	}
	
	/**
	 * @Title 区域统计企业数量
	 * @author  Administrator  @date 2017-10-16 
	 * @Description 
	 *
	 */
	@Permission(model = "government", privilegeValue = "main")
	@RequestMapping("/getEnterprisesNumber")
	@ResponseBody
	public Map<String, Object> getEnterprisesNumber(HttpServletRequest request) {
		Customer customer = (Customer) request.getSession().getAttribute(SessionName.CUSTOMER);
		Map<String, Object> msgMap = new HashMap<String, Object>();
		if(baseInterface == null){
			System.out.println("接口未能调用");
			msgMap.put("status", false);
			return null;
		}
		if (customer != null) {
			logger.info(moduleName + "[初始化获取各区域企业数]");
			//江苏省：32____(4个下划线)  苏州大市：3205__(2个下划线)   吴中区：320506
			String enterprisesNumber = InterfaceDataUtil.getMsg("enterprisesNumber");
			try{
				List<com.nbchina.ws.api.entinfo.baseinfo.CommonGridListEntityVo> commonGridListEntityVos = baseInterface.selectEntNumberByAreacode(enterprisesNumber);
				List<com.nbchina.ws.api.entinfo.baseinfo.CommonGridListEntityVo> commonGridListEntityVos1 = new ArrayList<com.nbchina.ws.api.entinfo.baseinfo.CommonGridListEntityVo>();
				long count = 0;
				long num = 0;
				for (com.nbchina.ws.api.entinfo.baseinfo.CommonGridListEntityVo commonGridListEntityVo : commonGridListEntityVos) {
					if(commonGridListEntityVo.getGridValue() == null){
						if(commonGridListEntityVo.getGridKey() != null){
							count += Long.parseLong(commonGridListEntityVo.getGridKey());
						}
					}else{
						commonGridListEntityVos1.add(commonGridListEntityVo);
					}
					num += Long.parseLong(commonGridListEntityVo.getGridKey());
				}
				com.nbchina.ws.api.entinfo.baseinfo.CommonGridListEntityVo commonGridListEntityVo = new com.nbchina.ws.api.entinfo.baseinfo.CommonGridListEntityVo();
				commonGridListEntityVo.setGridKey(count+"");
				commonGridListEntityVo.setGridValue("其他");
				commonGridListEntityVos1.add(commonGridListEntityVo);
				msgMap.put("commonGridListEntityVos", commonGridListEntityVos1);
				Map<String, Object> params = new HashMap<String, Object>();
						params.put("finalscore","700");
				PageView<ScoringEnterpriseList> pageView =new PageView<ScoringEnterpriseList>(1, 5);
				//param 仅支持 ent.name
				QueryResult<ScoringEnterpriseList> qr = organizationService.searchByAll(1, 5,params);
				msgMap.put("num", num);
				msgMap.put("enterprises3A", qr.getTotalrecord());
				msgMap.put("status", true);
			}catch (Exception e) {
				logger.error(moduleName+" DataService_getEnterprisesNumber 获取区域统计企业数量 失败");
				msgMap.put("status", false);
			}
		}else{
			msgMap.put("status", "-1");
		}
		return msgMap;
	}
}
